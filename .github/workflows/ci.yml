name: Java CI with Maven

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B clean verify
        env:
          SPRING_PROFILES_ACTIVE: test

      # Check if files exist
      - name: Check if test results and coverage reports exist
        uses: andstor/file-existence-action@v3.0.0
        id: check_files
        with:
          files: "target/surefire-reports/, target/site/jacoco/"

      # Fail the build if files don't exist
      - name: Fail if files don't exist
        if: steps.check_files.outputs.files_exists == 'false'
        run: |
          echo "Missing test results or coverage report files!"
          exit 1

      # Continue with an upload only if files exist
      - name: Upload Test Results
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/

      - name: Upload Coverage Report
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/

  compose-smoke-tests:
    name: Docker Compose Smoke Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Validate docker-compose.yml
        run: docker compose -f docker-compose.yaml config --quiet

      - name: Build & start services
        run: |
          docker compose -f docker-compose.yaml up --build --detach

      - name: Wait for application to be healthy
        run: |
          echo "Waiting for application to be healthy..."
          for i in {1..30}; do
            if curl -- fail http://localhost:8080/actuator/health; then
                echo "Application is healthy!"
                exit 0
            else
                echo "Application is not healthy yet, retrying in 10 seconds... ($i/10)"
                sleep 10
            fi
          done
          echo "Application did not become healthy in time!"
          docker compose logs bankapp
          exit 1
      - name: Tear down services
        if: always()
        run: docker compose -f docker-compose.yaml down --volumes --remove-orphans